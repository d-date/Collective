{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/haruta-masaki/projects/Collective/node_modules/react-native-half-modal/src/SemiModal.js\";\nimport React, { Component } from 'react';\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar MODAL_BG_OPEN_DURATION = 50;\nvar MODAL_BG_CLOSE_DURATION = 50;\nvar styles = StyleSheet.create({\n  modal: {\n    width: '100%',\n    borderRadius: 16\n  },\n  modalBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%'\n  }\n});\n\nvar SemiModal = function (_Component) {\n  _inherits(SemiModal, _Component);\n\n  function SemiModal(props) {\n    var _this;\n\n    _classCallCheck(this, SemiModal);\n\n    YellowBox.ignoreWarnings(['Warning: isMounted(...) is deprecated', 'Module RCTImageLoader']);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SemiModal).call(this, props));\n\n    _this.modalOpenAnimation = function () {\n      Animated.parallel([Animated.spring(_this.state.modalPan, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        useNativeDriver: true\n      }), Animated.timing(_this.state.modalBgPan, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        duration: MODAL_BG_OPEN_DURATION,\n        useNativeDriver: true\n      })]).start();\n    };\n\n    _this.modalCloseAnimation = function () {\n      Animated.parallel([Animated.spring(_this.state.modalPan, {\n        toValue: {\n          x: 0,\n          y: Dimensions.get('window').height\n        },\n        useNativeDriver: true\n      }), Animated.timing(_this.state.modalBgPan, {\n        toValue: {\n          x: 0,\n          y: Dimensions.get('window').height\n        },\n        duration: MODAL_BG_CLOSE_DURATION,\n        useNativeDriver: true,\n        delay: 150\n      })]).start(function () {});\n    };\n\n    _this.state = {\n      modalPan: new Animated.ValueXY(0),\n      modalBgPan: new Animated.ValueXY(0),\n      modalHeight: 0\n    };\n\n    _this.state.modalPan.setValue({\n      x: 0,\n      y: Dimensions.get('window').height\n    });\n\n    _this.state.modalBgPan.setValue({\n      x: 0,\n      y: Dimensions.get('window').height\n    });\n\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {\n        return true;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        return gestureState.dy !== 0;\n      },\n      onPanResponderGrant: function onPanResponderGrant(e, gestureState) {\n        _this.state.modalPan.setValue({\n          x: 0,\n          y: 0\n        });\n      },\n      onPanResponderMove: function onPanResponderMove(e, gestureState) {\n        if (gestureState.dy < 0 && _this.props.disableTopScroll) {\n          return;\n        }\n\n        if (Platform.OS === 'ios') {\n          _this.state.modalPan.setValue({\n            y: gestureState.dy\n          });\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease(e, gestureState) {\n        if (gestureState.moveY - gestureState.y0 > _this.props.closeThreshold) {\n          _this.props.onModalClose();\n        } else {\n          _this.modalOpenAnimation();\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(SemiModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.modalRef) {\n        setTimeout(function () {\n          _this2.modalRef.measure(function (x, y, width, height) {\n            _this2.setState({\n              modalHeight: height\n            });\n          });\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.isVisible === false && this.props.isVisible === true) {\n        this.modalOpenAnimation();\n      }\n\n      if (prevProps.isVisible === true && this.props.isVisible === false) {\n        this.modalCloseAnimation();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Animated.View, {\n        style: [styles.modalBackground, {\n          transform: this.state.modalBgPan.getTranslateTransform()\n        }, {\n          backgroundColor: this.props.backgroundColor\n        }, {\n          justifyContent: 'flex-end'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        style: [styles.modalBackground, {\n          transform: this.state.modalBgPan.getTranslateTransform()\n        }, {\n          backgroundColor: this.props.backgroundColor\n        }],\n        onPress: function onPress() {\n          return _this3.props.onModalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      }, React.createElement(View, {\n        style: {\n          height: Dimensions.get('window').height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      })), React.createElement(Animated.View, _extends({\n        style: [styles.modal, {\n          transform: this.state.modalPan.getTranslateTransform()\n        }, this.props.style]\n      }, this.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }), React.createElement(View, {\n        ref: function ref(refs) {\n          _this3.modalRef = refs;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return SemiModal;\n}(Component);\n\nSemiModal.defaultProps = {\n  style: {},\n  closeThreshold: 40,\n  backgroundColor: '#00000000',\n  disableTopScroll: false\n};\nexport { SemiModal as default };","map":{"version":3,"sources":["/Users/haruta-masaki/projects/Collective/node_modules/react-native-half-modal/src/SemiModal.js"],"names":["React","Component","MODAL_BG_OPEN_DURATION","MODAL_BG_CLOSE_DURATION","styles","StyleSheet","create","modal","width","borderRadius","modalBackground","position","top","left","height","SemiModal","props","YellowBox","ignoreWarnings","modalOpenAnimation","Animated","parallel","spring","state","modalPan","toValue","x","y","useNativeDriver","timing","modalBgPan","duration","start","modalCloseAnimation","Dimensions","get","delay","ValueXY","modalHeight","setValue","panResponder","PanResponder","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","evt","gestureState","dy","onPanResponderGrant","e","onPanResponderMove","disableTopScroll","Platform","OS","onPanResponderRelease","moveY","y0","closeThreshold","onModalClose","modalRef","setTimeout","measure","setState","prevProps","isVisible","transform","getTranslateTransform","backgroundColor","justifyContent","style","panHandlers","refs","children","defaultProps"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport { YellowBox, PanResponder, View, TouchableWithoutFeedback, Animated, Dimensions, StyleSheet, Platform } from 'react-native';\n\ntype Props = {\n  children: any,\n  isVisible: boolean,\n  onModalClose: Function,\n  style: Object,\n  closeThreshold: number,\n  backgroundColor: string,\n  disableTopScroll?: boolean\n};\n\ntype State = {\n  modalPan: Animated,\n  modalBgPan: Animated,\n  modalHeight: number\n};\n\ntype GestureState = {\n  y0: number,\n  moveY: number\n};\n\nconst MODAL_BG_OPEN_DURATION = 50;\nconst MODAL_BG_CLOSE_DURATION = 50;\n\nconst styles = StyleSheet.create({\n  modal: {\n    width: '100%',\n    borderRadius: 16\n  },\n  modalBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%'\n  }\n});\n\nexport default class SemiModal extends Component<Props, State> {\n  modalRef: View;\n  panResponder: PanResponder;\n\n  static defaultProps = {\n    style: {},\n    closeThreshold: 40,\n    backgroundColor: '#00000000',\n    disableTopScroll: false\n  };\n\n  constructor(props: Props) {\n    YellowBox.ignoreWarnings(['Warning: isMounted(...) is deprecated', 'Module RCTImageLoader']);\n\n    super(props);\n    this.state = {\n      modalPan: new Animated.ValueXY(0),\n      modalBgPan: new Animated.ValueXY(0),\n      modalHeight: 0\n    };\n    this.state.modalPan.setValue({ x: 0, y: Dimensions.get('window').height });\n    this.state.modalBgPan.setValue({ x: 0, y: Dimensions.get('window').height });\n\n    this.panResponder = PanResponder.create({\n      onMoveShouldSetResponderCapture: () => {\n        return true;\n      },\n\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        return gestureState.dy !== 0;\n      },\n\n      onPanResponderGrant: (e, gestureState) => {\n        this.state.modalPan.setValue({ x: 0, y: 0 });\n      },\n\n      onPanResponderMove: (e, gestureState: GestureState) => {\n        if (gestureState.dy < 0 && this.props.disableTopScroll) {\n          return;\n        }\n        // TODO(35d): android scroll\n        if (Platform.OS === 'ios') {\n          this.state.modalPan.setValue({ y: gestureState.dy });\n        }\n      },\n\n      onPanResponderRelease: (e, gestureState: GestureState) => {\n        if (gestureState.moveY - gestureState.y0 > this.props.closeThreshold) {\n          this.props.onModalClose();\n        } else {\n          this.modalOpenAnimation();\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.modalRef) {\n      setTimeout(() => {\n        this.modalRef.measure((x, y, width, height) => {\n          this.setState({ modalHeight: height });\n        });\n      }, 1000);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.isVisible === false && this.props.isVisible === true) {\n      this.modalOpenAnimation();\n    }\n    if (prevProps.isVisible === true && this.props.isVisible === false) {\n      this.modalCloseAnimation();\n    }\n  }\n\n  modalOpenAnimation = () => {\n    Animated.parallel([\n      Animated.spring(this.state.modalPan, {\n        toValue: { x: 0, y: 0 },\n        useNativeDriver: true\n      }),\n      Animated.timing(this.state.modalBgPan, {\n        toValue: { x: 0, y: 0 },\n        duration: MODAL_BG_OPEN_DURATION,\n        useNativeDriver: true\n      })\n    ]).start();\n  };\n\n  modalCloseAnimation = () => {\n    Animated.parallel([\n      Animated.spring(this.state.modalPan, {\n        toValue: { x: 0, y: Dimensions.get('window').height },\n        useNativeDriver: true\n      }),\n      Animated.timing(this.state.modalBgPan, {\n        toValue: { x: 0, y: Dimensions.get('window').height },\n        duration: MODAL_BG_CLOSE_DURATION,\n        useNativeDriver: true,\n        delay: 150\n      })\n    ]).start(() => {});\n  };\n\n  render() {\n    return (\n      <Animated.View style={[styles.modalBackground, { transform: this.state.modalBgPan.getTranslateTransform() }, { backgroundColor: this.props.backgroundColor }, { justifyContent: 'flex-end' }]}>\n        <TouchableWithoutFeedback style={[styles.modalBackground, { transform: this.state.modalBgPan.getTranslateTransform() }, { backgroundColor: this.props.backgroundColor }]} onPress={() => this.props.onModalClose()}>\n          <View style={{ height: Dimensions.get('window').height }} />\n        </TouchableWithoutFeedback>\n        <Animated.View style={[styles.modal, { transform: this.state.modalPan.getTranslateTransform() }, this.props.style]} {...this.panResponder.panHandlers}>\n          <View\n            ref={refs => {\n              this.modalRef = refs;\n            }}\n          >\n            {this.props.children}\n          </View>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}